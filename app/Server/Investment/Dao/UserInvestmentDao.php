<?php
/**
 * Created by PhpStorm.
 * User: Administrator
 * Date: 2019/1/15
 * Time: 15:46
 */

namespace App\Server\Investment\Dao;
use App\Model\UserInvestmentRecord;

class UserInvestmentDao  extends  UserInvestmentRecord
{

    public function saveUserInvest($data)
    {
        return parent::saveUserInvest($data); // TODO: Change the autogenerated stub
    }

    //后台获取所有流水数据
    public function getUserInvestFlow(){

             $where = ['is_usable'=>1];
             return parent::getAdminTradeFlow($where);

    }

    public function getRecordByCondition($where)
    {
        return parent::getRecordByCondition($where); // TODO: Change the autogenerated stub
    }


    public function getUserCountRecords($where)
    {
        $userRecords =parent::getRecordByCondition($where)->toArray(); // TODO: Change the autogenerated stub
        $newUserRecords=[];

        if($userRecords){
            //防止删了0号索引，导致返回的json文件变形
            $i=0;
             foreach ($userRecords as $key => $values){
                 //获取状态为2的订单
                 if($values['invest_status']<=2){
              $invest_day=$values['invest_pay_time']+$values['invest_time']-time();
              $newUserRecords[$i]['invest_day'] = $this->dealDate($invest_day,$values['id'],$values['invest_status']);
              $newUserRecords[$i]['invest_money']  = $values['invest_money'];
              $newUserRecords[$i]['invest_order']  = $values['invest_order'];
              $newUserRecords[$i]['rate_of_return_set']  = $values['rate_of_return_set'].'%';
              $newUserRecords[$i]['created_at']  =date('Y.m.d',$values['invest_pay_time']);
              if($invest_day<0 ){
                  $newUserRecords[$i]['invest_status'] =2;
              }else{
                  $newUserRecords[$i]['invest_status']  = $values['invest_status'];
              }
                     $i++;
                    }

             }
        }
        return $newUserRecords;
    }

    private function dealDate($date,$id,$status){
        if($status==2){
            return '可提取';
        }
        if($status==3){
            return '已完成';
        }
        if($status==4){
            return '未到时间提前提取';
        }
       //如果小于零则变更状态，并且变更为可取
       if($date<0 && $status ==1){
              $where=['id'=>$id];
              $data = ['invest_status'=>2];
              parent::updateUserInvest($where,$data);
              return '可提取';
        }
        if($date <= 86400 && $date >= 0){
            return '小于1天';
        }
       return ceil($date/86400).'天';
    }


    //获取历史交易
    public function getUserHistoryOrder($user_id){

        //获取历史交易记录
       $where = ['user_id'=>$user_id];
        $newUserHistory =[];

       $userHistory= parent::getHistoryTrade($where)->toArray();
      if($userHistory){
       foreach ($userHistory as $key =>$value){
        //   var_dump($value);
           $invest_day=$value['invest_pay_time']+$value['invest_time']-time();
           $newUserHistory[$key]['invest_day'] = $this->dealDate($invest_day,$value['id'],$value['invest_status']);
           $newUserHistory[$key]['invest_money']  = $value['invest_money'];
           $newUserHistory[$key]['invest_order']  = $value['invest_order'];
           $newUserHistory[$key]['rate_of_return_set']  = $value['rate_of_return_set'].'%';
           $newUserHistory[$key]['created_at']  =date('Y.m.d',$value['invest_pay_time']);
           $newUserHistory[$key]['coin_name']  =$value['get_coin_name']['coin_name'];
           $newUserHistory[$key]['invest_type_nmae']  =$value['get_invest_type_name']['invest_type_name'];
           $newUserHistory[$key]['invest_status']  =$value['invest_status'];
           $newUserHistory[$key]['rate']  =number_format($value['invest_money']*$value['rate_of_return_set']/100,'3');
       }
      }
       return $newUserHistory;
    }



}